#!/bin/bash
set -e

{{ if eq .profile "coder" -}}

# Check if running inside a Coder workspace
if [ "$CODER" = "true" ]; then
    echo "Running inside Coder workspace, setting up symlinks..."
    
    # ========================================
    # Claude configuration
    # ========================================
    # Check if /shared/.claude exists
    if [ -d "/shared/.claude" ]; then
        echo "Found existing /shared/.claude, creating symlinks..."
        # Remove existing ~/.claude if it exists and is not a symlink to /shared/.claude
        if [ -e "$HOME/.claude" ] && [ "$(readlink -f "$HOME/.claude")" != "/shared/.claude" ]; then
            rm -rf "$HOME/.claude"
        fi
        # Create symlink to /shared/.claude
        ln -sf /shared/.claude "$HOME/.claude"
        
        # Handle .claude.json symlink
        if [ -f "/shared/.claude.json" ]; then
            # Remove existing ~/.claude.json if it's not already a symlink to /shared/.claude.json
            if [ -e "$HOME/.claude.json" ] && [ "$(readlink -f "$HOME/.claude.json")" != "/shared/.claude.json" ]; then
                rm -f "$HOME/.claude.json"
            fi
            ln -sf /shared/.claude.json "$HOME/.claude.json"
        fi
    else
        echo "No /shared/.claude found, copying from dotfiles..."
        # Copy claude directory to /shared/
        cp -r {{ .chezmoi.sourceDir }}/shared/claude /shared/.claude
        
        # Create symlinks
        ln -sf /shared/.claude "$HOME/.claude"
        
        # Copy settings.json as .claude.json to /shared/
        if [ -f "{{ .chezmoi.sourceDir }}/shared/claude/settings.json" ]; then
            cp {{ .chezmoi.sourceDir }}/shared/claude/settings.json /shared/.claude.json
            ln -sf /shared/.claude.json "$HOME/.claude.json"
        fi
    fi
    
    # ========================================
    # OpenCode configuration
    # ========================================
    # Handle .config/opencode directory
    if [ -d "/shared/.config/opencode" ]; then
        echo "Found /shared/.config/opencode, creating symlinks..."
        # Ensure .config directory exists
        mkdir -p "$HOME/.config"
        # Remove existing ~/.config/opencode if it exists and is not a symlink to /shared/.config/opencode
        if [ -e "$HOME/.config/opencode" ] && [ "$(readlink -f "$HOME/.config/opencode")" != "/shared/.config/opencode" ]; then
            rm -rf "$HOME/.config/opencode"
        fi
        # Create symlink to /shared/.config/opencode
        ln -sf /shared/.config/opencode "$HOME/.config/opencode"
    fi
    
    # Handle opencode.json symlink (project root config)
    if [ -f "/shared/opencode.json" ]; then
        echo "Found /shared/opencode.json, creating symlink..."
        # Remove existing ~/opencode.json if it's not already a symlink to /shared/opencode.json
        if [ -e "$HOME/opencode.json" ] && [ "$(readlink -f "$HOME/opencode.json")" != "/shared/opencode.json" ]; then
            rm -f "$HOME/opencode.json"
        fi
        ln -sf /shared/opencode.json "$HOME/opencode.json"
    fi
    
    # ========================================
    # Kubernetes configuration
    # ========================================
    # Handle .kube directory
    if [ -d "/shared/.kube" ]; then
        echo "Found /shared/.kube, creating symlink..."
        # Remove existing ~/.kube if it exists and is not a symlink to /shared/.kube
        if [ -e "$HOME/.kube" ] && [ "$(readlink -f "$HOME/.kube")" != "/shared/.kube" ]; then
            rm -rf "$HOME/.kube"
        fi
        # Create symlink to /shared/.kube
        ln -sf /shared/.kube "$HOME/.kube"
    fi
    
else
    echo "Not in Coder workspace, creating regular symlink..."
    # Outside of Coder, just symlink to the dotfiles version
    ln -sf {{ .chezmoi.sourceDir }}/shared/claude "$HOME/.claude"
fi
{{ end -}}